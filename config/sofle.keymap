/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// Remap the CS for nice!view

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };

// Fix encoder event generation

&left_encoder {
    resolution = <4>;
    steps = <40>;
};

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky key quick release";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };

        slq: sticky_layer_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky layer quick release";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_F1 {
            bindings = <&kp F1>;
            key-positions = <1 13>;
            layers = <0>;
        };

        combo_F2 {
            bindings = <&kp F2>;
            key-positions = <2 14>;
            layers = <0>;
        };

        combo_F3 {
            bindings = <&kp F3>;
            key-positions = <3 15>;
            layers = <0>;
        };

        combo_F4 {
            bindings = <&kp F4>;
            key-positions = <16 4>;
            layers = <0>;
        };

        combo_F5 {
            bindings = <&kp F5>;
            key-positions = <17 5>;
            layers = <0>;
        };

        combo_F6 {
            bindings = <&kp F6>;
            key-positions = <18 6>;
            layers = <0>;
        };

        combo_F7 {
            bindings = <&kp F7>;
            key-positions = <19 7>;
            layers = <0>;
        };

        combo_F8 {
            bindings = <&kp F8>;
            key-positions = <8 20>;
            layers = <0>;
        };

        combo_F9 {
            bindings = <&kp F9>;
            key-positions = <21 9>;
            layers = <0>;
        };

        combo_F10 {
            bindings = <&kp F10>;
            key-positions = <22 10>;
            layers = <0>;
        };

        combo_F11 {
            bindings = <&kp F11>;
            key-positions = <23 11>;
            layers = <0>;
        };

        combo_F12 {
            bindings = <&kp F12>;
            key-positions = <23 35>;
            layers = <0>;
        };

        combo_EXCL {
            bindings = <&kp EXCL>;
            key-positions = <13 25>;
            layers = <0>;
        };

        combo_AT {
            bindings = <&kp AT>;
            key-positions = <26 14>;
            layers = <0>;
        };

        combo_HASH {
            bindings = <&kp HASH>;
            key-positions = <27 15>;
            layers = <0>;
        };

        combo_DLLR {
            bindings = <&kp DLLR>;
            key-positions = <28 16>;
            layers = <0>;
        };

        combo_PRCNT {
            bindings = <&kp PRCNT>;
            key-positions = <29 17>;
            layers = <0>;
        };

        combo_CARET {
            bindings = <&kp CARET>;
            key-positions = <30 18>;
            layers = <0>;
        };

        combo_AMPS {
            bindings = <&kp AMPS>;
            key-positions = <31 19>;
            layers = <0>;
        };

        combo_ASTRK {
            bindings = <&kp ASTRK>;
            key-positions = <32 20>;
            layers = <0>;
        };

        combo_LPAR {
            bindings = <&kp LPAR>;
            key-positions = <33 21>;
            layers = <0>;
        };

        combo_RPAR {
            bindings = <&kp RPAR>;
            key-positions = <34 22>;
            layers = <0>;
        };

        combo_EQUAL {
            bindings = <&kp EQUAL>;
            key-positions = <25 37>;
            layers = <0>;
        };

        combo_MINUS {
            bindings = <&kp MINUS>;
            key-positions = <26 38>;
            layers = <0>;
        };

        combo_PLUS {
            bindings = <&kp PLUS>;
            key-positions = <27 39>;
            layers = <0>;
        };

        combo_BSLH {
            bindings = <&kp BSLH>;
            key-positions = <28 40>;
            layers = <0>;
        };

        combo_TILDE {
            bindings = <&kp TILDE>;
            key-positions = <29 41>;
            layers = <0>;
        };

        combo_UNDER {
            bindings = <&kp UNDER>;
            key-positions = <30 44>;
            layers = <0>;
        };

        combo_PIPE {
            bindings = <&kp PIPE>;
            key-positions = <45 31>;
            layers = <0>;
        };

        combo_SLASH {
            bindings = <&kp SLASH>;
            key-positions = <32 46>;
            layers = <0>;
        };

        combo_LT {
            bindings = <&kp LT>;
            key-positions = <33 47>;
            layers = <0>;
        };

        combo_GT {
            bindings = <&kp GT>;
            key-positions = <34 48>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp GRAVE   &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                               &kp N6      &kp N7     &kp N8     &kp N9    &kp N0    &none
&kp ESC     &kp Q   &kp W     &kp E     &kp R      &kp T                                &kp Y       &kp U      &kp I      &kp O     &kp P     &kp BSPC
&kp TAB     &kp A   &kp S     &kp D     &kp F      &kp G                                &kp H       &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&skq LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B       &kp C_MUTE    &none      &kp N       &kp M      &kp COMMA  &kp DOT   &kp FSLH  &skq RSHFT
                    &kp LGUI  &kp LALT  &kp LCTRL  &slq LOWER  &kp SPACE     &kp ENTER  &slq RAISE  &kp RCTRL  &kp RALT   &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            display-name = "Symbols";
            bindings = <
&trans     &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        raise_layer {
            display-name = "Navigate";
            bindings = <
&trans  &trans      &trans     &trans       &trans       &trans                      &trans    &trans     &trans     &trans     &trans  &trans
&trans  &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                      &trans    &kp PG_DN  &kp PG_UP  &trans     &trans  &kp DEL
&trans  &kp LALT    &kp LCTRL  &kp LSHFT    &trans       &kp CLCK                    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans    &trans    &trans  &trans    &trans     &trans     &trans     &trans  &trans
                    &trans     &trans       &trans       &trans    &trans    &trans  &trans    &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN &inc_dec_kp PG_DN PG_UP>;
        };

        adjust_layer {
            display-name = "Adjust";
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                     &none       &none     &none  &none       &none  &out OUT_TOG
&rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                  &none       &none     &none  &none       &none  &studio_unlock
&none            &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &none                            &kp K_PREV  &kp K_PP  &none  &kp K_NEXT  &none  &none
&none            &none            &none            &none            &none            &none            &none    &none  &none       &none     &none  &none       &none  &none
                                  &none            &none            &none            &none            &none    &none  &none       &none     &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };
    };
};
